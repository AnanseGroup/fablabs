= simple_form_for lab, html: { class: 'form-horizontal' } do |f|
  = render 'form_errors', resource: lab

  - if lab.new_record?
    %fieldset
      %legend
        Important Information

      = render 'referees', :f => f
      = f.input :parent_id, label: "Parent (Supernode) Lab", as: 'select', collection: Lab.with_approved_state.order('name ASC'), hint: "Is this lab connected with a Supernode? If so, which lab?", input_html: { class: 'enhanced' }

  %fieldset
    %legend Basic Details

    = f.input :name, label: 'Fab Lab Name'

    - Lab::Kinds.each_with_index do |m, index|
      %span
        = f.radio_button :kind, index
        %label.radio{style: "width: 160px;"}
          = m.humanize.titleize

  %fieldset
    %legend  What qualifies as a Fablab
    %p
      Fablabs have a list of
      %a{href: "http://www.fabfoundation.org/fab-labs/fab-lab-criteria/"} qualities and requirements.
      More information can be found
      %a{href: "http://www.fabfoundation.org/fab-labs/fab-lab-criteria/"} here.

    .row
      = f.radio_button :charter, 1
      %label.radio{style: "width: 80%;"}
        Charter: You need to agree with the
        %a{href: "http://fab.cba.mit.edu/about/charter/"} Fablab charter.

    .row
      = f.radio_button :tools, 1
      %label.radio{style: "width: 80%;"}
        Tools: The submitted Fab Lab has a compatible set of tools related with the official fab lab inventory.

    .row
      = f.radio_button :network, 1
      %label.radio{style: "width: 80%;"}
        Network: The submitted Fab Lab commits to participate in the network activities: regional meetings, FABX conferences.

    .row
      = f.radio_button :programs, 1
      %label.radio{style: "width: 80%;"}
        Programs: Our staff is (or will be) trained in the Fab Academy or compatible programs.

    .row
      = f.radio_button :public, 1
      %label.radio{style: "width: 80%;"}
        Access: Public access to the Fablab is essential.

  %fieldset
    %legend Description

    = f.input :blurb, as: 'text', hint: 'A very brief overview of the lab, maybe include what it specializes in. <span id="description-count"></span> characters available.'.html_safe, input_html: { rows: 3, data: { limit: 200, counter: '#description-count'} }

    = f.input :description, hint: 'An in-depth description of the lab', input_html: { style: 'height: 8em' }

    = f.input :slug, hint: "This is the unique 'username' of the lab, it will be in the URL" do
      .row.collapse
        .columns.large-3
          %span.prefix= "#{Rails.application.config.url}/"
        .columns.large-9= f.input_field :slug, class: 'form-control'

  %fieldset
    %legend Lab Images

    .row
      .columns.large-3= image_tag @lab.avatar, class: 'avatar big'
      .columns.large-9= f.input :avatar_src, input_html: { class: 'fp', data: { fp_store_location: 'S3', fp_store_path: 'labs/avatars/', fp_store_container: ENV['S3_BUCKET'] } }, label: 'Avatar', hint: "This will be a square image next shown next to the lab name throughout the site"
    %hr/
    .row
      .columns.large-3
        - if @lab.header_image_src.present?
          = image_tag @lab.header_image_src, class: 'avatar big'
      .columns.large-9= f.input :header_image_src, input_html: { class: 'fp', data: { fp_store_location: 'S3', fp_store_path: "labs/photos/", fp_store_container: ENV['S3_BUCKET'] } }, label: 'Photo', hint: "A single (large) photo of your lab. You will be able to add more photos soon."

  %fieldset
    %legend Lab Location
    .address
      %fieldset
        %legend Step 1
        %p.hint Enter the lab's address in the textbox below. Then drag the map marker to pinpoint its exact position.
        = f.input :geocomplete, input_html: { id: 'geocomplete', data: { latlng: "#{@lab.latitude}, #{@lab.longitude}"} }, label: false
      %fieldset.step-2
        %legend Step 2
        %p.hint Edit the details in the address fields below.
        .row
          .columns.large-6#map-holder
            #location-picker-map
          .columns.large-6
            = f.input :address_1, input_html: { data: {geo: "street_address"}}, label: 'Lab Address', placeholder: 'Address Line 1'
            = f.input :address_2, label: false, placeholder: 'Address Line 2 (Optional)'
            = f.input :city, input_html: { data: {geo: "locality"}}
            = f.input :county, label: 'State/Province/County'

            = f.input :postal_code, input_html: { data: {geo: "postal_code"}}
            = f.input :country_code, as: 'country', label: 'Country', input_html: { data: {geo: "country_short"} }, wrapper_html: { class: 'boo'}, iso_codes: true#, input_html: { class: 'enhanced'}
            = f.input :latitude, as: :hidden, input_html: { data: {geo: "lat"}}
            = f.input :longitude, as: :hidden, input_html: { data: {geo: "lng"}}
            = f.input :zoom, as: :hidden
        %hr/
        = f.input :address_notes, hint: 'Any details that might be useful for someone trying to find the lab. For example, "Go up the stairs and through the red door".'

  %fieldset
    %legend Lab Contact Details
    = f.input :phone, hint: "A general enquiries phone number for the lab", label: "Lab Phone Number"
    = f.input :email, hint: "A general enquiries email address for the lab", label: "Lab Email Address"

  - if @lab.new_record?
    %fieldset
      %legend Your Role
      %p.hint What is your association with this lab?
      = f.simple_fields_for :employees do |e|
        = e.input :job_title, placeholder: "e.g. Lab Manager"
        = e.input :description, placeholder: "e.g. Coordinates Workshops and Events"

  -# %fieldset.opening-hours
  -#   %legend Opening Hours
  -#   %table{cellspacing: 0}
  -#     %tr
  -#       %td
  -#       - (0..48).each do |quart|
  -#         %td
  -#           .rotate= Time.at(quart* 30 * 60).utc.strftime("%H:%M")
  -#     - [1,2,3,4,5,6,0].each do |day|
  -#       %tr
  -#         %th= Date::DAYNAMES[day][0..1]
  -#         - (0..48).each do |quart|
  -#           %td

  %fieldset
    %legend Links
    %p.hint Any websites for this Fab Lab. It can include blogs, social networks, video/photo sites etc.
    = f.simple_fields_for :links do |link|
      = render 'link_fields', f: link
    .links
      = link_to_add_association f, :links, class: 'button tiny' do
        = fa_icon "plus"
        Add another link

  %fieldset
    %legend Capabilities
    = f.input :capabilities, as: 'check_boxes', inline_label: true, item_wrapper_class: 'checkbox_container', label: false, collection: Lab::Capabilities.map{|f| [ I18n.t("capabilities.#{f}"), f]}, checked: f.object.capabilities, hint: "Check all of the boxes that apply to this lab"

    - @collection = Machine.includes(:brand)
    - @selected = @lab.machines.map{|u| u.id}.collect
    %label{for: "facilities_attributes"}
      Machine
    = select_tag :facilities_attributes, options_from_collection_for_select(@collection, :id, :name, @selected), { multiple: true, name: 'lab[facilities_attributes][][thing_id]', class: 'machines'}

    = f.input :tools_list, hint: "Please list any machines that you have so that we can add them to the directory.", input_html: { style: "height: 8em" }, placeholder: "e.g. Makerbot Industries - Makerbot 2"

  - if @lab.new_record?
    %fieldset
      %legend Anything else?
      = f.input :application_notes

  = f.submit (lab.new_record? ? 'Add Lab' : 'Update Lab'), class: 'button'
